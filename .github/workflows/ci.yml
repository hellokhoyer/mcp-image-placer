name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]
  schedule:
    - cron: '0 6 * * 1' # Every Monday at 6 AM UTC

env:
  NODE_ENV: test

jobs:
  # Quality checks and testing
  test:
    name: Test & Quality Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type checking
      run: npm run type-check
      
    - name: Lint code
      run: npm run lint
      
    - name: Check formatting
      run: npm run format:check
      
    - name: Run tests with coverage
      run: npm run test:ci
      
    - name: Upload coverage reports
      if: matrix.node-version == 20 # Only upload once
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Build project
      run: npm run build
      
    - name: Test CLI functionality
      run: |
        # Test CLI can start and respond
        timeout 10s node dist/cli/index.js || test $? = 124
        
    - name: Verify package contents
      run: |
        npm pack --dry-run
        echo "Package contents:"
        tar -tzf $(npm pack) || true

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level high
      
    - name: Check for known vulnerabilities
      run: npx audit-ci --high

  # Publish to npm (only on release)
  publish:
    name: Publish to NPM
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build:clean
      
    - name: Run final tests
      run: npm run test:ci
      
    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub release assets
      run: |
        npm pack
        mv *.tgz mcp-image-placeholder-${{ github.event.release.tag_name }}.tgz
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./mcp-image-placeholder-${{ github.event.release.tag_name }}.tgz
        asset_name: mcp-image-placeholder-${{ github.event.release.tag_name }}.tgz
        asset_content_type: application/gzip

  # Dependency updates (weekly)
  dependency-update:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        
    - name: Update dependencies
      run: |
        npm update
        npm audit fix --audit-level high || true
        
    - name: Run tests with updated dependencies
      run: |
        npm ci
        npm run test:ci
        
    - name: Create pull request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: update dependencies'
        body: |
          Automated dependency update
          
          - Updated npm dependencies to latest compatible versions
          - Ran security audit and fixed issues
          - All tests passing
        branch: chore/update-dependencies
        delete-branch: true
